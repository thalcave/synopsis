 $500/year for the InnoDB Hot Backup Utility.
 
 .frm file  - stores the table definition. 
 The data file has an .MYD (MYData) extension. 
 The index file has an .MYI (MYIndex) extension.
 
 *****************************
 BACKUP
 1)LOCK TABLES  followed by FLUSH TABLES for the tables
 2) SELECT INTO ...OUTFILE sau
 
 MYSQLHOTCOPY && MYSQLDUMP
 
******************************** 
 MYSQLHOTCOPY -
mysqlhotcopy = Perl script . It uses LOCK TABLES, FLUSH TABLES, and cp or scp to make a backup of a database quickly. 
It is the fastest way to make a backup of the database or single tables, but it can be run only on the same machine where the database directories are located. 
mysqlhotcopy works only for backing up MyISAM and ISAM tables. It runs on Unix, and as of MySQL 4.0.18 also on NetWare.

 mysqlhotcopy db_name [/path/to/new_directory]

********************************
MYSQLDUMP
The mysqldump client can be used to dump a database or a collection of databases for backup or for transferring the data to another SQL server 
(not necessarily a MySQL server). The dump contains SQL statements to create the table and/or populate the table.

mysqldump --opt backup > backup-file.sql -u root -p
mysql backup < backup-file.sql  -u florin -p


**********************************
Backing Up and Recovering an InnoDB Database

InnoDB Hot Backup is the ideal solution for online backups of InnoDB tables in MySQL and for setting up replication.
backs up a running InnoDB database under MySQL without setting any locks or disturbing normal database processing.


If you are able to shut down your MySQL server, you can make a binary backup that consists of all files used by InnoDB to manage its tables. Use the following procedure: 
	Shut down your MySQL server and make sure that it shuts down without errors. 
	Copy all your data files (ibdata files and .ibd files) into a safe place. 
	Copy all your ib_logfile files to a safe place. 
	Copy your my.cnf configuration file or files to a safe place. 
	Copy all the .frm files for your InnoDB tables to a safe place.

In addition to taking binary backups as just described, you should also regularly take dumps of your tables with mysqldump. 
(a binary file might be corrupted without you noticing it)

*********************************
1) select into files

2) mysqlhotcopy

3) mysqldump
   mysqlbinlog log-file | mysql -h server_name


********************************
Incremental backup
- using binary logging
-the binary log contains all statements which updated data
Running the server with the binary log enabled makes performance about 1% slower

Each time it restarts, the MySQL server creates a new binary log file using the next number in the sequence. 
While the server is running, you can also tell it to close the current binary log file and begin a new one manually by issuing 
a FLUSH LOGS SQL statement or with a mysqladmin flush-logs command.


