QMetaObject = contains meta-information about Qt obejcts
- responsible for signal and slots, rtti
- a single QMetaObject is created for each QObject subclass used
- available as QObject::metaObject()

The reason to use QMetaObject::invokeMethod if the recipient object might be in another thread is that attempting to call a slot directly on an object 
in another thread can lead to corruption or worse if it accesses or modifies non-thread-safe data.

QMetaType = manages named types in the meta-object system.
The class is used as a helper to marshall types in QVariant and in queued signals and slots connections

Q_DECLARE_METATYPE ( Type )
- It is needed to use the type Type as a custom type in QVariant.

QVariant= container of variables. 
It can store variables of different types (similar in some way to void*), but it provides information about the stored type.


------------------------------------------------------------

Each time you emit a signal, i.e. write
    emit something();
you actually call the something() function, which it automatically generated by meta object compiler and placed into a *.moc file

Within this function it's checked what slots this signal is connected to at the moment, and appropriate slot functions 
(which you implemented in your own sources) are sequentially called via the symbol tables

