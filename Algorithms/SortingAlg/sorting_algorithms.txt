stable sorting algorithms = maintain the relative order of records with equal keys (i.e., values)
	e.g if we are sorting pairs (i,j) only after (i), ...

1) Merge sort:
- O(n log n) comparison based sorting algorithm
- divide and conquer (recursively breaking down a problem into two or more sub-problems of the same (or related) type,
		      until these become simple enough to be solved directly.
		      The solutions to the sub-problems are then combined to give a solution to the original problem.)

merge sort:
1. If the list is of length 0 or 1, then it is already sorted. Otherwise:
	2. Divide the unsorted list into two sublists of about half the size.
	3. Sort each sublist recursively by re-applying merge sort.
	4. Merge the two sublists back into one sorted list

two main ideas to imrove runtime:
- A small list will take fewer steps to sort than a large list.
- Fewer steps are required to construct a sorted list from two sorted lists than two unsorted lists

- useful for sorting data on disk that is too large to fit entirely into primary memory
